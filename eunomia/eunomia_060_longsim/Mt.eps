%!PS-Adobe-2.0 EPSF-2.0
%%Title: Mt.eps
%%Creator: gnuplot 5.2 patchlevel 5
%%CreationDate: Tue Dec 18 17:21:17 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Mt.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 18 17:21:17 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
882 576 M
63 0 V
5930 0 R
-63 0 V
stroke
774 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
882 1111 M
63 0 V
5930 0 R
-63 0 V
stroke
774 1111 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 50)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 1647 M
63 0 V
5930 0 R
-63 0 V
stroke
774 1647 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 100)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 2182 M
63 0 V
5930 0 R
-63 0 V
stroke
774 2182 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 150)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 2718 M
63 0 V
5930 0 R
-63 0 V
stroke
774 2718 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 200)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 3253 M
63 0 V
5930 0 R
-63 0 V
stroke
774 3253 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 250)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 3788 M
63 0 V
5930 0 R
-63 0 V
stroke
774 3788 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 300)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 4324 M
63 0 V
5930 0 R
-63 0 V
stroke
774 4324 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 350)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 4859 M
63 0 V
5930 0 R
-63 0 V
stroke
774 4859 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 400)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
882 576 M
0 63 V
0 4220 R
0 -63 V
stroke
882 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1548 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1548 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2214 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2214 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2880 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2880 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3546 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3546 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4211 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4211 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4877 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4877 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.6)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5543 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5543 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.7)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6209 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6209 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6875 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
882 4859 N
882 576 L
5993 0 V
0 4283 V
-5993 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
162 2717 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (i [deg])]
] -60.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
LCb setrgbcolor
3878 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (t [Myr])]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.08 0.08 0.08 C LCb setrgbcolor
6056 4706 M
("<awk '$1==1{print $2, $8}' bin.out") Rshow
1.000 UP
1.000 UL
LTb
0.08 0.08 0.08 C 6164 4706 M
495 0 V
882 1271 M
7 1967 V
6 -1893 V
7 1893 V
7 -1901 V
6 1891 V
7 -1907 V
7 1949 V
6 -1893 V
7 1934 V
7 -1940 V
6 1934 V
7 -1876 V
7 1995 V
6 -1950 V
7 1975 V
7 -1903 V
6 1945 V
7 -1882 V
7 2002 V
6 -1852 V
7 1989 V
6 -1888 V
7 1943 V
7 -1911 V
6 1978 V
7 -1859 V
7 1984 V
6 -1887 V
7 1925 V
7 -1951 V
6 1945 V
7 -1877 V
7 1975 V
6 -1906 V
7 1913 V
7 -1950 V
6 1947 V
7 -1874 V
7 1993 V
6 -1882 V
7 1937 V
7 -1915 V
6 1964 V
7 -1870 V
7 -1852 V
6 2001 V
7 -1879 V
7 1951 V
6 -1896 V
7 1980 V
7 -1855 V
6 2007 V
7 -1862 V
7 1962 V
6 -1826 V
7 1960 V
7 -1872 V
6 1993 V
7 -1859 V
7 1955 V
6 -1945 V
7 1928 V
7 -1903 V
6 1965 V
7 -1889 V
6 1928 V
7 -1974 V
7 1900 V
6 -1905 V
7 1979 V
7 -1887 V
6 1946 V
7 -1930 V
7 1931 V
6 -1879 V
7 2005 V
7 -1847 V
6 1978 V
7 -1892 V
7 1952 V
6 -1885 V
7 1988 V
7 -1841 V
6 2002 V
7 -1881 V
7 1940 V
6 -1914 V
7 1964 V
7 -1875 V
6 1992 V
7 -1902 V
7 1897 V
6 -1951 V
7 1939 V
7 -1906 V
6 1961 V
7 -1921 V
7 1895 V
6 -1941 V
7 1958 V
7 -1871 V
6 -1871 V
7 1967 V
7 -1910 V
6 1941 V
7 -1880 V
7 2007 V
6 -1845 V
7 1997 V
6 -1881 V
7 1957 V
7 -1886 V
6 1996 V
7 -1836 V
7 2007 V
6 -1858 V
7 1967 V
7 -1901 V
6 1959 V
7 -1859 V
7 2008 V
6 -1863 V
7 1954 V
7 -1925 V
6 1926 V
7 -1903 V
7 1984 V
6 -1885 V
7 1933 V
7 -1954 V
6 1920 V
7 -1899 V
7 1980 V
6 -1873 V
7 1957 V
7 -1930 V
6 1946 V
7 -1875 V
7 1998 V
6 -1850 V
7 1988 V
7 -1895 V
6 1951 V
7 -1879 V
7 2001 V
6 -1846 V
7 -1849 V
7 1978 V
6 -1911 V
7 1946 V
6 -1879 V
7 1990 V
7 -1870 V
6 1970 V
7 -1936 V
7 1875 V
6 -1929 V
7 1971 V
7 -1885 V
6 1926 V
7 -1963 V
7 1907 V
6 -1891 V
7 1987 V
7 -1857 V
6 1978 V
7 -1911 V
7 1949 V
6 -1873 V
7 1999 V
7 -1841 V
6 2008 V
7 -1875 V
7 1957 V
6 -1889 V
7 1991 V
7 -1848 V
6 2009 V
7 -1862 V
7 1960 V
6 -1911 V
7 1963 V
7 -1868 V
6 1990 V
7 -1863 V
7 1948 V
6 -1951 V
7 1935 V
7 -1884 V
6 1979 V
7 -1875 V
7 1941 V
6 -1945 V
7 1943 V
6 -1874 V
7 2005 V
7 -1856 V
6 -1883 V
7 1956 V
7 -1893 V
6 1978 V
7 -1843 V
7 2023 V
6 -1847 V
7 1981 V
7 -1888 V
6 1971 V
7 -1863 V
7 2017 V
6 -1837 V
7 1997 V
7 -1893 V
6 1952 V
7 -1892 V
7 1979 V
6 -1851 V
7 1892 V
7 -1928 V
6 1909 V
7 -1940 V
7 1934 V
6 -1892 V
7 1947 V
7 -1959 V
6 1887 V
7 -1914 V
7 1984 V
6 -1867 V
7 1976 V
7 -1900 V
6 1940 V
7 -1880 V
7 2004 V
6 -1835 V
7 2007 V
6 -1865 V
7 1967 V
7 -1891 V
6 1985 V
7 -1837 V
7 -1832 V
6 1998 V
7 -1890 V
7 1946 V
6 -1898 V
7 1975 V
7 -1854 V
stroke 2527 881 M
6 1987 V
7 -1905 V
7 1909 V
6 -1932 V
7 1957 V
7 -1874 V
6 1983 V
7 -1900 V
7 1911 V
6 -1915 V
7 1988 V
7 -1857 V
6 2001 V
7 -1872 V
7 1953 V
6 -1895 V
7 1989 V
7 -1846 V
6 2015 V
7 -1849 V
7 1982 V
6 -1893 V
7 1975 V
7 -1852 V
6 2017 V
7 -1842 V
7 1999 V
6 -1893 V
7 1943 V
7 -1875 V
6 2001 V
7 -1850 V
6 1985 V
7 -1916 V
7 1919 V
6 -1918 V
7 -1891 V
7 1994 V
6 -1887 V
7 1914 V
7 -1940 V
6 1951 V
7 -1874 V
7 2003 V
6 -1860 V
7 1964 V
7 -1913 V
6 1967 V
7 -1854 V
7 2011 V
6 -1840 V
7 1994 V
7 -1889 V
6 1957 V
7 -1873 V
7 2006 V
6 -1846 V
7 1998 V
7 -1893 V
6 1927 V
7 -1910 V
7 1979 V
6 -1870 V
7 1953 V
7 -1925 V
6 1902 V
7 -1947 V
7 1967 V
6 -1863 V
7 1957 V
7 -1914 V
6 1932 V
7 -1897 V
7 2005 V
6 -1835 V
7 2011 V
6 -1873 V
7 1960 V
7 -1877 V
6 2009 V
7 -1833 V
7 -1829 V
6 2016 V
7 -1868 V
7 1966 V
6 -1872 V
7 2007 V
7 -1832 V
6 2016 V
7 -1859 V
7 1962 V
6 -1912 V
7 1976 V
7 -1855 V
6 1995 V
7 -1874 V
7 1936 V
6 -1942 V
7 1948 V
7 -1872 V
6 1987 V
7 -1894 V
7 1937 V
6 -1920 V
7 1957 V
7 -1854 V
6 2014 V
7 -1864 V
7 1971 V
6 -1892 V
7 1975 V
7 -1847 V
6 2027 V
7 -1830 V
7 -1856 V
6 1981 V
7 -1881 V
6 1985 V
7 -1842 V
7 2033 V
6 -1836 V
7 1971 V
7 -1902 V
6 1949 V
7 -1877 V
7 1990 V
6 -1872 V
7 1949 V
7 -1953 V
6 1879 V
7 -1904 V
7 1988 V
6 -1892 V
7 1945 V
7 -1928 V
6 1941 V
7 -1865 V
7 2020 V
6 -1844 V
7 1982 V
7 -1886 V
6 1976 V
7 -1864 V
7 2018 V
6 -1828 V
7 2012 V
7 -1872 V
6 1970 V
7 -1876 V
7 1997 V
6 -1834 V
7 -1837 V
7 1987 V
6 -1905 V
7 1951 V
7 -1883 V
6 1993 V
7 -1848 V
7 1980 V
6 -1934 V
7 1932 V
6 -1891 V
7 1986 V
7 -1846 V
6 1989 V
7 -1896 V
7 1943 V
6 -1882 V
7 2009 V
7 -1823 V
6 2010 V
7 -1859 V
7 1975 V
6 -1877 V
7 1998 V
7 -1826 V
6 2030 V
7 -1839 V
7 1991 V
6 -1882 V
7 1981 V
7 -1852 V
6 2027 V
7 -1840 V
7 -1869 V
6 1962 V
7 -1905 V
7 1962 V
6 -1864 V
7 1997 V
7 -1894 V
6 1896 V
7 -1946 V
7 1955 V
6 -1886 V
7 1986 V
7 -1899 V
6 1911 V
7 -1907 V
7 1995 V
6 -1844 V
7 2015 V
7 -1857 V
6 1975 V
7 -1890 V
6 1993 V
7 -1832 V
7 2034 V
6 -1834 V
7 2000 V
7 -1883 V
6 1965 V
7 -1855 V
7 2023 V
6 -1835 V
7 1990 V
7 -1898 V
6 1940 V
7 -1897 V
7 1979 V
6 -1853 V
7 1971 V
7 -1927 V
6 1918 V
7 -1900 V
7 -1858 V
6 1998 V
7 -1869 V
7 1962 V
6 -1910 V
7 1982 V
7 -1833 V
6 2020 V
7 -1842 V
7 1992 V
6 -1879 V
7 1982 V
7 -1843 V
6 2034 V
7 -1826 V
7 2012 V
6 -1867 V
7 1974 V
7 -1867 V
6 2021 V
7 -1826 V
6 2015 V
7 -1860 V
7 1956 V
stroke 4185 4138 M
6 -1903 V
7 1983 V
7 -1842 V
6 2007 V
7 -1899 V
7 1934 V
6 -1921 V
7 -1900 V
7 2002 V
6 -1853 V
7 1963 V
7 -1909 V
6 1952 V
7 -1866 V
7 2013 V
6 -1833 V
7 2008 V
7 -1873 V
6 1963 V
7 -1863 V
7 2021 V
6 -1822 V
7 2018 V
7 -1857 V
6 1972 V
7 -1884 V
7 1994 V
6 -1835 V
7 2014 V
7 -1875 V
6 1954 V
7 -1926 V
7 1944 V
6 -1869 V
7 1997 V
7 -1900 V
6 1899 V
7 -1933 V
7 1982 V
6 -1860 V
7 2011 V
6 -1864 V
7 -1903 V
7 1965 V
6 -1855 V
7 2022 V
7 -1821 V
6 2026 V
7 -1856 V
7 1976 V
6 -1865 V
7 2019 V
7 -1821 V
6 2033 V
7 -1835 V
7 1990 V
6 -1882 V
7 1990 V
7 -1838 V
6 2025 V
7 -1842 V
7 1987 V
6 -1899 V
7 1946 V
7 -1863 V
6 2011 V
7 -1861 V
7 1966 V
6 -1920 V
7 1945 V
7 -1868 V
6 -1849 V
7 2014 V
7 -1867 V
6 1950 V
7 -1886 V
7 2006 V
6 -1829 V
7 2034 V
7 -1833 V
6 1993 V
7 -1878 V
6 1998 V
7 -1829 V
7 2037 V
6 -1817 V
7 2020 V
7 -1866 V
6 1971 V
7 -1860 V
7 2022 V
6 -1827 V
7 2010 V
7 -1876 V
6 1939 V
7 -1922 V
7 1982 V
6 -1861 V
7 1956 V
7 -1919 V
6 1908 V
7 -1933 V
7 1987 V
6 -1844 V
7 -1866 V
7 1952 V
6 -1899 V
7 1992 V
7 -1841 V
6 2031 V
7 -1829 V
7 2001 V
6 -1874 V
7 1989 V
7 -1839 V
6 2034 V
7 -1817 V
7 2024 V
6 -1861 V
7 1966 V
7 -1864 V
6 2019 V
7 -1825 V
7 2017 V
6 -1869 V
7 1953 V
6 -1898 V
7 1975 V
7 -1837 V
6 -1842 V
7 1970 V
7 -1908 V
6 1953 V
7 -1875 V
7 2020 V
6 -1828 V
7 2002 V
7 -1887 V
6 1972 V
7 -1850 V
7 2020 V
6 -1817 V
7 2030 V
7 -1853 V
6 1983 V
7 -1862 V
7 2019 V
6 -1820 V
7 2038 V
7 -1836 V
6 1990 V
7 -1879 V
7 1997 V
6 -1835 V
7 2025 V
7 -1833 V
6 -1877 V
7 1944 V
7 -1904 V
6 1994 V
7 -1846 V
7 1974 V
6 -1899 V
7 1927 V
7 -1924 V
6 1996 V
7 -1836 V
7 2004 V
6 -1883 V
7 1957 V
6 -1873 V
7 2014 V
7 -1817 V
6 2040 V
7 -1838 V
7 1980 V
6 -1868 V
7 2009 V
7 -1822 V
6 2035 V
7 -1821 V
7 2001 V
6 -1883 V
7 1966 V
7 -1848 V
6 -1832 V
7 2013 V
7 -1881 V
6 1937 V
7 -1911 V
7 1965 V
6 -1849 V
7 1999 V
7 -1907 V
6 1944 V
7 -1888 V
7 1989 V
6 -1830 V
7 2025 V
7 -1856 V
6 1969 V
7 -1870 V
7 2020 V
6 -1818 V
7 2042 V
7 -1825 V
6 2004 V
7 -1867 V
7 2004 V
6 -1823 V
7 2044 V
6 -1811 V
7 2024 V
7 -1862 V
6 -1879 V
7 2006 V
7 -1826 V
6 2032 V
7 -1835 V
7 1983 V
6 -1902 V
7 1961 V
7 -1855 V
6 2017 V
7 -1866 V
7 1970 V
6 -1913 V
7 1947 V
7 -1850 V
6 2024 V
7 -1842 V
7 1977 V
6 -1885 V
7 1988 V
7 -1837 V
6 2032 V
7 -1813 V
7 2019 V
6 -1862 V
7 1982 V
7 -1840 V
6 -1816 V
7 2043 V
7 -1824 V
6 2004 V
7 -1877 V
7 1973 V
6 -1845 V
7 2028 V
stroke 5843 3183 M
7 -1834 V
6 1972 V
7 -1916 V
7 1936 V
6 -1897 V
7 2010 V
6 -1852 V
7 1950 V
7 -1919 V
6 1960 V
7 -1855 V
7 2028 V
6 -1824 V
7 2011 V
7 -1880 V
6 1985 V
7 -1836 V
7 2040 V
6 -1811 V
7 -1818 V
7 2009 V
6 -1866 V
7 2003 V
7 -1827 V
6 2043 V
7 -1817 V
7 2024 V
6 -1864 V
7 1973 V
7 -1854 V
6 2029 V
7 -1824 V
7 2003 V
6 -1874 V
7 1957 V
7 -1892 V
6 2009 V
7 -1829 V
7 1998 V
6 -1877 V
7 1954 V
7 -1882 V
6 2021 V
7 -1815 V
7 -1819 V
6 1999 V
7 -1870 V
6 1995 V
7 -1828 V
7 2042 V
6 -1801 V
7 2041 V
7 -1840 V
6 1990 V
7 -1846 V
7 2035 V
6 -1804 V
7 2047 V
7 -1829 V
6 1994 V
7 -1874 V
7 1996 V
6 -1829 V
7 2027 V
7 -1856 V
6 1970 V
7 -1925 V
7 1940 V
6 -1867 V
7 -1848 V
7 1971 V
6 -1940 V
7 1942 V
7 -1857 V
6 2009 V
7 -1828 V
7 2013 V
6 -1871 V
7 1978 V
7 -1844 V
6 2043 V
7 -1805 V
7 2039 V
6 -1838 V
7 1995 V
7 -1857 V
6 2027 V
7 -1806 V
7 2047 V
6 -1826 V
7 1998 V
6 -1878 V
7 1984 V
7 -1830 V
6 -1817 V
7 2010 V
7 -1870 V
6 1952 V
7 -1899 V
7 2004 V
6 -1831 V
7 2019 V
7 -1883 V
6 1963 V
7 -1871 V
7 2012 V
6 -1814 V
7 2037 V
7 -1840 V
6 1986 V
7 -1857 V
7 2024 V
6 -1807 V
7 2047 V
7 -1813 V
6 2016 V
7 -1858 V
7 -1848 V
6 2041 V
7 -1713 V
882 1271 Pls
889 3238 Pls
895 1345 Pls
902 3238 Pls
909 1337 Pls
915 3228 Pls
922 1321 Pls
929 3270 Pls
935 1377 Pls
942 3311 Pls
949 1371 Pls
955 3305 Pls
962 1429 Pls
969 3424 Pls
975 1474 Pls
982 3449 Pls
989 1546 Pls
995 3491 Pls
1002 1609 Pls
1009 3611 Pls
1015 1759 Pls
1022 3748 Pls
1028 1860 Pls
1035 3803 Pls
1042 1892 Pls
1048 3870 Pls
1055 2011 Pls
1062 3995 Pls
1068 2108 Pls
1075 4033 Pls
1082 2082 Pls
1088 4027 Pls
1095 2150 Pls
1102 4125 Pls
1108 2219 Pls
1115 4132 Pls
1122 2182 Pls
1128 4129 Pls
1135 2255 Pls
1142 4248 Pls
1148 2366 Pls
1155 4303 Pls
1162 2388 Pls
1168 4352 Pls
1175 2482 Pls
1182 630 Pls
1188 2631 Pls
1195 752 Pls
1202 2703 Pls
1208 807 Pls
1215 2787 Pls
1222 932 Pls
1228 2939 Pls
1235 1077 Pls
1242 3039 Pls
1248 1213 Pls
1255 3173 Pls
1262 1301 Pls
1268 3294 Pls
1275 1435 Pls
1282 3390 Pls
1288 1445 Pls
1295 3373 Pls
1302 1470 Pls
1308 3435 Pls
1315 1546 Pls
1321 3474 Pls
1328 1500 Pls
1335 3400 Pls
1341 1495 Pls
1348 3474 Pls
1355 1587 Pls
1361 3533 Pls
1368 1603 Pls
1375 3534 Pls
1381 1655 Pls
1388 3660 Pls
1395 1813 Pls
1401 3791 Pls
1408 1899 Pls
1415 3851 Pls
1421 1966 Pls
1428 3954 Pls
1435 2113 Pls
1441 4115 Pls
1448 2234 Pls
1455 4174 Pls
1461 2260 Pls
1468 4224 Pls
1475 2349 Pls
1481 4341 Pls
1488 2439 Pls
1495 4336 Pls
1501 2385 Pls
1508 4324 Pls
1515 2418 Pls
1521 4379 Pls
1528 2458 Pls
1535 4353 Pls
1541 2412 Pls
1548 4370 Pls
1555 2499 Pls
1561 628 Pls
1568 2595 Pls
1575 685 Pls
1581 2626 Pls
1588 746 Pls
1595 2753 Pls
1601 908 Pls
1608 2905 Pls
1614 1024 Pls
1621 2981 Pls
1628 1095 Pls
1634 3091 Pls
1641 1255 Pls
1648 3262 Pls
1654 1404 Pls
1661 3371 Pls
1668 1470 Pls
1674 3429 Pls
1681 1570 Pls
1688 3578 Pls
1694 1715 Pls
1701 3669 Pls
1708 1744 Pls
1714 3670 Pls
1721 1767 Pls
1728 3751 Pls
1734 1866 Pls
1741 3799 Pls
1748 1845 Pls
1754 3765 Pls
1761 1866 Pls
1768 3846 Pls
1774 1973 Pls
1781 3930 Pls
1788 2000 Pls
1794 3946 Pls
1801 2071 Pls
1808 4069 Pls
1814 2219 Pls
1821 4207 Pls
1828 2312 Pls
1834 4263 Pls
1841 2384 Pls
1848 4385 Pls
1854 2539 Pls
1861 690 Pls
1868 2668 Pls
1874 757 Pls
1881 2703 Pls
1887 824 Pls
1894 2814 Pls
1901 944 Pls
1907 2914 Pls
1914 978 Pls
1921 2853 Pls
1927 924 Pls
1934 2895 Pls
1941 1010 Pls
1947 2936 Pls
1954 973 Pls
1961 2880 Pls
1967 989 Pls
1974 2976 Pls
1981 1119 Pls
1987 3097 Pls
1994 1186 Pls
2001 3135 Pls
2007 1262 Pls
2014 3261 Pls
2021 1420 Pls
2027 3428 Pls
2034 1553 Pls
2041 3510 Pls
2047 1621 Pls
2054 3612 Pls
2061 1764 Pls
2067 3773 Pls
2074 1911 Pls
2081 3871 Pls
2087 1960 Pls
2094 3923 Pls
2101 2055 Pls
2107 4045 Pls
2114 2182 Pls
2121 4130 Pls
2127 2179 Pls
2134 4114 Pls
2141 2230 Pls
2147 4209 Pls
2154 2334 Pls
2161 4275 Pls
2167 2330 Pls
2174 4273 Pls
2180 2399 Pls
2187 4404 Pls
2194 2548 Pls
2200 665 Pls
2207 2621 Pls
2214 728 Pls
2220 2706 Pls
2227 863 Pls
2234 2886 Pls
2240 1039 Pls
2247 3020 Pls
2254 1132 Pls
2260 3103 Pls
2267 1240 Pls
2274 3257 Pls
2280 1420 Pls
2287 3417 Pls
2294 1524 Pls
2300 3476 Pls
2307 1584 Pls
2314 3563 Pls
2320 1712 Pls
2327 3604 Pls
2334 1676 Pls
2340 3585 Pls
2347 1645 Pls
2354 3579 Pls
2360 1687 Pls
2367 3634 Pls
2374 1675 Pls
2380 3562 Pls
2387 1648 Pls
2394 3632 Pls
2400 1765 Pls
2407 3741 Pls
2414 1841 Pls
2420 3781 Pls
2427 1901 Pls
2434 3905 Pls
2440 2070 Pls
2447 4077 Pls
2453 2212 Pls
2460 4179 Pls
2467 2288 Pls
2473 4273 Pls
2480 2436 Pls
2487 604 Pls
2493 2602 Pls
2500 712 Pls
2507 2658 Pls
2513 760 Pls
2520 2735 Pls
2527 881 Pls
2533 2868 Pls
2540 963 Pls
2547 2872 Pls
2553 940 Pls
2560 2897 Pls
2567 1023 Pls
2573 3006 Pls
2580 1106 Pls
2587 3017 Pls
2593 1102 Pls
2600 3090 Pls
2607 1233 Pls
2613 3234 Pls
2620 1362 Pls
2627 3315 Pls
2633 1420 Pls
2640 3409 Pls
2647 1563 Pls
2653 3578 Pls
2660 1729 Pls
2667 3711 Pls
2673 1818 Pls
2680 3793 Pls
2687 1941 Pls
2693 3958 Pls
2700 2116 Pls
2707 4115 Pls
2713 2222 Pls
2720 4165 Pls
2727 2290 Pls
2733 4291 Pls
2740 2441 Pls
2746 4426 Pls
2753 2510 Pls
2760 4429 Pls
2766 2511 Pls
2773 620 Pls
2780 2614 Pls
2786 727 Pls
2793 2641 Pls
2800 701 Pls
2806 2652 Pls
2813 778 Pls
2820 2781 Pls
2826 921 Pls
2833 2885 Pls
2840 972 Pls
2846 2939 Pls
2853 1085 Pls
2860 3096 Pls
2866 1256 Pls
2873 3250 Pls
2880 1361 Pls
2886 3318 Pls
2893 1445 Pls
2900 3451 Pls
2906 1605 Pls
2913 3603 Pls
2920 1710 Pls
2926 3637 Pls
2933 1727 Pls
2940 3706 Pls
2946 1836 Pls
2953 3789 Pls
2960 1864 Pls
2966 3766 Pls
2973 1819 Pls
2980 3786 Pls
2986 1923 Pls
2993 3880 Pls
3000 1966 Pls
3006 3898 Pls
3013 2001 Pls
3020 4006 Pls
3026 2171 Pls
3033 4182 Pls
3039 2309 Pls
3046 4269 Pls
3053 2392 Pls
3059 4401 Pls
3066 2568 Pls
3073 739 Pls
3079 2755 Pls
3086 887 Pls
3093 2853 Pls
3099 981 Pls
3106 2988 Pls
3113 1156 Pls
3119 3172 Pls
3126 1313 Pls
3133 3275 Pls
3139 1363 Pls
3146 3339 Pls
3153 1484 Pls
3159 3479 Pls
3166 1605 Pls
3173 3541 Pls
3179 1599 Pls
3186 3547 Pls
3193 1675 Pls
3199 3662 Pls
3206 1768 Pls
3213 3705 Pls
3219 1785 Pls
3226 3742 Pls
3233 1888 Pls
3239 3902 Pls
3246 2038 Pls
3253 4009 Pls
3259 2117 Pls
3266 4092 Pls
3273 2245 Pls
3279 4272 Pls
3286 2442 Pls
3293 586 Pls
3299 2567 Pls
3306 686 Pls
3312 2671 Pls
3319 829 Pls
3326 2862 Pls
3332 1026 Pls
3339 2997 Pls
3346 1095 Pls
3352 3044 Pls
3359 1167 Pls
3366 3157 Pls
3372 1285 Pls
3379 3234 Pls
3386 1281 Pls
3392 3160 Pls
3399 1256 Pls
3406 3244 Pls
3412 1352 Pls
3419 3297 Pls
3426 1369 Pls
3432 3310 Pls
3439 1445 Pls
3446 3465 Pls
3452 1621 Pls
3459 3603 Pls
3466 1717 Pls
3472 3693 Pls
3479 1829 Pls
3486 3847 Pls
3492 2019 Pls
3499 4031 Pls
3506 2159 Pls
3512 4129 Pls
3519 2253 Pls
3526 4250 Pls
3532 2416 Pls
3539 579 Pls
3546 2566 Pls
3552 661 Pls
3559 2612 Pls
3566 729 Pls
3572 2722 Pls
3579 874 Pls
3586 2854 Pls
3592 920 Pls
3599 2852 Pls
3605 961 Pls
3612 2947 Pls
3619 1101 Pls
3625 3090 Pls
3632 1194 Pls
3639 3137 Pls
3645 1255 Pls
3652 3264 Pls
3659 1441 Pls
3665 3451 Pls
3672 1592 Pls
3679 3567 Pls
3685 1690 Pls
3692 3688 Pls
3699 1862 Pls
3705 3892 Pls
3712 2053 Pls
3719 4044 Pls
3725 2162 Pls
3732 4143 Pls
3739 2291 Pls
3745 4318 Pls
3752 2478 Pls
3759 609 Pls
3765 2571 Pls
3772 666 Pls
3779 2628 Pls
3785 764 Pls
3792 2761 Pls
3799 867 Pls
3805 2763 Pls
3812 817 Pls
3819 2772 Pls
3825 886 Pls
3832 2872 Pls
3839 973 Pls
3845 2884 Pls
3852 977 Pls
3859 2972 Pls
3865 1128 Pls
3872 3143 Pls
3879 1286 Pls
3885 3261 Pls
3892 1371 Pls
3898 3364 Pls
3905 1532 Pls
3912 3566 Pls
3918 1732 Pls
3925 3732 Pls
3932 1849 Pls
3938 3814 Pls
3945 1959 Pls
3952 3982 Pls
3958 2147 Pls
3965 4137 Pls
3972 2239 Pls
3978 4179 Pls
3985 2282 Pls
3992 4261 Pls
3998 2408 Pls
4005 4379 Pls
4012 2452 Pls
4018 4370 Pls
4025 2470 Pls
4032 612 Pls
4038 2610 Pls
4045 741 Pls
4052 2703 Pls
4058 793 Pls
4065 2775 Pls
4072 942 Pls
4078 2962 Pls
4085 1120 Pls
4092 3112 Pls
4098 1233 Pls
4105 3215 Pls
4112 1372 Pls
4118 3406 Pls
4125 1580 Pls
4132 3592 Pls
4138 1725 Pls
4145 3699 Pls
4152 1832 Pls
4158 3853 Pls
4165 2027 Pls
4171 4042 Pls
4178 2182 Pls
4185 4138 Pls
4191 2235 Pls
4198 4218 Pls
4205 2376 Pls
4211 4383 Pls
4218 2484 Pls
4225 4418 Pls
4231 2497 Pls
4238 597 Pls
4245 2599 Pls
4251 746 Pls
4258 2709 Pls
4265 800 Pls
4271 2752 Pls
4278 886 Pls
4285 2899 Pls
4291 1066 Pls
4298 3074 Pls
4305 1201 Pls
4311 3164 Pls
4318 1301 Pls
4325 3322 Pls
4331 1500 Pls
4338 3518 Pls
4345 1661 Pls
4351 3633 Pls
4358 1749 Pls
4365 3743 Pls
4371 1908 Pls
4378 3922 Pls
4385 2047 Pls
4391 4001 Pls
4398 2075 Pls
4405 4019 Pls
4411 2150 Pls
4418 4147 Pls
4425 2247 Pls
4431 4146 Pls
4438 2213 Pls
4445 4195 Pls
4451 2335 Pls
4458 4346 Pls
4464 2482 Pls
4471 579 Pls
4478 2544 Pls
4484 689 Pls
4491 2711 Pls
4498 890 Pls
4504 2916 Pls
4511 1060 Pls
4518 3036 Pls
4524 1171 Pls
4531 3190 Pls
4538 1369 Pls
4544 3402 Pls
4551 1567 Pls
4558 3557 Pls
4564 1675 Pls
4571 3665 Pls
4578 1827 Pls
4584 3852 Pls
4591 2010 Pls
4598 3997 Pls
4604 2098 Pls
4611 4044 Pls
4618 2181 Pls
4624 4192 Pls
4631 2331 Pls
4638 4297 Pls
4644 2377 Pls
4651 4322 Pls
4658 2454 Pls
4664 605 Pls
4671 2619 Pls
4678 752 Pls
4684 2702 Pls
4691 816 Pls
4698 2822 Pls
4704 993 Pls
4711 3027 Pls
4718 1194 Pls
4724 3187 Pls
4731 1309 Pls
4737 3307 Pls
4744 1478 Pls
4751 3515 Pls
4757 1698 Pls
4764 3718 Pls
4771 1852 Pls
4777 3823 Pls
4784 1963 Pls
4791 3985 Pls
4797 2158 Pls
4804 4168 Pls
4811 2292 Pls
4817 4231 Pls
4824 2309 Pls
4831 4291 Pls
4837 2430 Pls
4844 4386 Pls
4851 2467 Pls
4857 4375 Pls
4864 2442 Pls
4871 4429 Pls
4877 2585 Pls
4884 719 Pls
4891 2671 Pls
4897 772 Pls
4904 2764 Pls
4911 923 Pls
4917 2954 Pls
4924 1125 Pls
4931 3126 Pls
4937 1252 Pls
4944 3241 Pls
4951 1402 Pls
4957 3436 Pls
4964 1619 Pls
4971 3643 Pls
4977 1782 Pls
4984 3748 Pls
4991 1884 Pls
4997 3903 Pls
5004 2078 Pls
5011 4095 Pls
5017 2226 Pls
5024 4179 Pls
5030 2281 Pls
5037 4256 Pls
5044 2419 Pls
5050 577 Pls
5057 2547 Pls
5064 639 Pls
5070 2592 Pls
5077 717 Pls
5084 2737 Pls
5090 909 Pls
5097 2911 Pls
5104 1024 Pls
5110 2996 Pls
5117 1146 Pls
5124 3166 Pls
5130 1349 Pls
5137 3379 Pls
5144 1526 Pls
5150 3509 Pls
5157 1647 Pls
5164 3666 Pls
5170 1846 Pls
5177 3884 Pls
5184 2048 Pls
5190 4038 Pls
5197 2159 Pls
5204 4156 Pls
5210 2321 Pls
5217 4346 Pls
5224 2513 Pls
5230 636 Pls
5237 2580 Pls
5244 676 Pls
5250 2670 Pls
5257 824 Pls
5264 2798 Pls
5270 899 Pls
5277 2826 Pls
5284 902 Pls
5290 2898 Pls
5297 1062 Pls
5304 3066 Pls
5310 1183 Pls
5317 3140 Pls
5323 1267 Pls
5330 3281 Pls
5337 1464 Pls
5343 3504 Pls
5350 1666 Pls
5357 3646 Pls
5363 1778 Pls
5370 3787 Pls
5377 1965 Pls
5383 4000 Pls
5390 2179 Pls
5397 4180 Pls
5403 2297 Pls
5410 4263 Pls
5417 2415 Pls
5423 583 Pls
5430 2596 Pls
5437 715 Pls
5443 2652 Pls
5450 741 Pls
5457 2706 Pls
5463 857 Pls
5470 2856 Pls
5477 949 Pls
5483 2893 Pls
5490 1005 Pls
5497 2994 Pls
5503 1164 Pls
5510 3189 Pls
5517 1333 Pls
5523 3302 Pls
5530 1432 Pls
5537 3452 Pls
5543 1634 Pls
5550 3676 Pls
5557 1851 Pls
5563 3855 Pls
5570 1988 Pls
5577 3992 Pls
5583 2169 Pls
5590 4213 Pls
5596 2402 Pls
5603 4426 Pls
5610 2564 Pls
5616 685 Pls
5623 2691 Pls
5630 865 Pls
5636 2897 Pls
5643 1062 Pls
5650 3045 Pls
5656 1143 Pls
5663 3104 Pls
5670 1249 Pls
5676 3266 Pls
5683 1400 Pls
5690 3370 Pls
5696 1457 Pls
5703 3404 Pls
5710 1554 Pls
5716 3578 Pls
5723 1736 Pls
5730 3713 Pls
5736 1828 Pls
5743 3816 Pls
5750 1979 Pls
5756 4011 Pls
5763 2198 Pls
5770 4217 Pls
5776 2355 Pls
5783 4337 Pls
5790 2497 Pls
5796 681 Pls
5803 2724 Pls
5810 900 Pls
5816 2904 Pls
5823 1027 Pls
5830 3000 Pls
5836 1155 Pls
5843 3183 Pls
5850 1349 Pls
5856 3321 Pls
5863 1405 Pls
5870 3341 Pls
5876 1444 Pls
5883 3454 Pls
5889 1602 Pls
5896 3552 Pls
5903 1633 Pls
5909 3593 Pls
5916 1738 Pls
5923 3766 Pls
5929 1942 Pls
5936 3953 Pls
5943 2073 Pls
5949 4058 Pls
5956 2222 Pls
5963 4262 Pls
5969 2451 Pls
5976 633 Pls
5983 2642 Pls
5989 776 Pls
5996 2779 Pls
6003 952 Pls
6009 2995 Pls
6016 1178 Pls
6023 3202 Pls
6029 1338 Pls
6036 3311 Pls
6043 1457 Pls
6049 3486 Pls
6056 1662 Pls
6063 3665 Pls
6069 1791 Pls
6076 3748 Pls
6083 1856 Pls
6089 3865 Pls
6096 2036 Pls
6103 4034 Pls
6109 2157 Pls
6116 4111 Pls
6123 2229 Pls
6129 4250 Pls
6136 2435 Pls
6143 616 Pls
6149 2615 Pls
6156 745 Pls
6162 2740 Pls
6169 912 Pls
6176 2954 Pls
6182 1153 Pls
6189 3194 Pls
6196 1354 Pls
6202 3344 Pls
6209 1498 Pls
6216 3533 Pls
6222 1729 Pls
6229 3776 Pls
6236 1947 Pls
6242 3941 Pls
6249 2067 Pls
6256 4063 Pls
6262 2234 Pls
6269 4261 Pls
6276 2405 Pls
6282 4375 Pls
6289 2450 Pls
6296 4390 Pls
6302 2523 Pls
6309 675 Pls
6316 2646 Pls
6322 706 Pls
6329 2648 Pls
6336 791 Pls
6342 2800 Pls
6349 972 Pls
6356 2985 Pls
6362 1114 Pls
6369 3092 Pls
6376 1248 Pls
6382 3291 Pls
6389 1486 Pls
6396 3525 Pls
6402 1687 Pls
6409 3682 Pls
6416 1825 Pls
6422 3852 Pls
6429 2046 Pls
6436 4093 Pls
6442 2267 Pls
6449 4265 Pls
6455 2387 Pls
6462 4371 Pls
6469 2541 Pls
6475 724 Pls
6482 2734 Pls
6489 864 Pls
6495 2816 Pls
6502 917 Pls
6509 2921 Pls
6515 1090 Pls
6522 3109 Pls
6529 1226 Pls
6535 3189 Pls
6542 1318 Pls
6549 3330 Pls
6555 1516 Pls
6562 3553 Pls
6569 1713 Pls
6575 3699 Pls
6582 1842 Pls
6589 3866 Pls
6595 2059 Pls
6602 4106 Pls
6609 2293 Pls
6615 4309 Pls
6622 2451 Pls
6629 603 Pls
6635 2644 Pls
6642 931 Pls
6411 4706 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
882 4859 N
882 576 L
5993 0 V
0 4283 V
-5993 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
