%!PS-Adobe-2.0 EPSF-2.0
%%Title: it.eps
%%Creator: gnuplot 5.2 patchlevel 5
%%CreationDate: Tue Dec 18 17:21:20 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (it.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Dec 18 17:21:20 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
990 576 M
63 0 V
5822 0 R
-63 0 V
stroke
882 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 11.5)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
990 1290 M
63 0 V
5822 0 R
-63 0 V
stroke
882 1290 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 12)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 2004 M
63 0 V
5822 0 R
-63 0 V
stroke
882 2004 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 12.5)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 2718 M
63 0 V
5822 0 R
-63 0 V
stroke
882 2718 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 13)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 3431 M
63 0 V
5822 0 R
-63 0 V
stroke
882 3431 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 13.5)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 4145 M
63 0 V
5822 0 R
-63 0 V
stroke
882 4145 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 14)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 4859 M
63 0 V
5822 0 R
-63 0 V
stroke
882 4859 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 14.5)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
990 576 M
0 63 V
0 4220 R
0 -63 V
stroke
990 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1644 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1644 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2298 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2298 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2952 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2952 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3606 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3606 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4259 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4259 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4913 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4913 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.6)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5567 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5567 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.7)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6221 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6221 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6875 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
990 4859 N
990 576 L
5885 0 V
0 4283 V
-5885 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
162 2717 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (i [deg])]
] -60.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
LCb setrgbcolor
3932 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (t [Myr])]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
LTb
% Begin plot #1
1.000 UL
LTb
0.08 0.08 0.08 C LCb setrgbcolor
6056 4706 M
("<awk '$1==1{print $2, $5}' bin.out") Rshow
1.000 UL
LTb
0.08 0.08 0.08 C 6164 4706 M
495 0 V
990 2112 M
7 -233 V
6 119 V
7 277 V
6 -26 V
7 -329 V
6 -412 V
7 -195 V
6 198 V
7 299 V
6 130 V
7 -333 V
6 -379 V
7 -186 V
7 353 V
6 548 V
7 398 V
6 -80 V
7 -400 V
6 -236 V
7 216 V
6 687 V
7 597 V
6 244 V
7 -311 V
6 -393 V
7 -115 V
7 439 V
6 588 V
7 318 V
6 -223 V
7 -579 V
6 -352 V
7 120 V
6 499 V
7 267 V
6 -194 V
7 -691 V
6 -550 V
7 -24 V
7 447 V
6 444 V
7 -79 V
6 -577 V
7 -789 V
6 -201 V
7 408 V
6 673 V
7 249 V
6 -392 V
7 -754 V
6 -527 V
7 212 V
7 629 V
6 545 V
7 -80 V
6 -513 V
7 -564 V
6 14 V
7 524 V
6 621 V
7 189 V
6 -279 V
7 -328 V
6 4 V
7 517 V
7 534 V
6 279 V
7 -213 V
6 -269 V
7 -69 V
6 397 V
7 474 V
6 204 V
7 -218 V
6 -510 V
7 -328 V
6 54 V
7 429 V
7 230 V
6 -163 V
7 -550 V
6 -638 V
7 -249 V
6 190 V
7 384 V
6 17 V
7 -355 V
6 -591 V
7 -321 V
7 161 V
6 427 V
7 222 V
6 -245 V
7 -397 V
6 -236 V
7 312 V
6 475 V
7 330 V
6 -232 V
7 -409 V
6 -223 V
7 382 V
7 655 V
6 462 V
7 -116 V
6 -569 V
7 -384 V
6 208 V
7 800 V
6 704 V
7 237 V
6 -470 V
7 -646 V
6 -246 V
7 434 V
7 772 V
6 462 V
7 -132 V
6 -713 V
7 -612 V
6 -128 V
7 392 V
6 418 V
7 -46 V
6 -546 V
7 -765 V
6 -314 V
7 163 V
7 395 V
6 -9 V
7 -427 V
6 -627 V
7 -223 V
6 319 V
7 529 V
6 250 V
7 -264 V
6 -428 V
7 -218 V
6 390 V
7 620 V
7 504 V
6 -26 V
7 -349 V
6 -357 V
7 89 V
6 509 V
7 506 V
6 196 V
7 -273 V
6 -346 V
7 -166 V
6 307 V
7 389 V
7 226 V
6 -131 V
7 -332 V
6 -183 V
7 167 V
6 424 V
7 201 V
6 -163 V
7 -423 V
6 -338 V
7 112 V
6 368 V
7 306 V
7 -226 V
6 -539 V
7 -667 V
6 -184 V
7 293 V
6 450 V
7 62 V
6 -485 V
7 -719 V
6 -489 V
7 202 V
6 553 V
7 473 V
7 -120 V
6 -467 V
7 -434 V
6 167 V
7 642 V
6 660 V
7 170 V
6 -337 V
7 -336 V
6 71 V
7 613 V
6 615 V
7 234 V
7 -375 V
6 -496 V
7 -158 V
6 363 V
7 635 V
6 306 V
7 -204 V
6 -698 V
7 -504 V
6 -2 V
7 536 V
6 539 V
7 62 V
7 -451 V
6 -717 V
7 -364 V
6 136 V
7 500 V
6 252 V
7 -205 V
6 -577 V
7 -518 V
6 -74 V
7 250 V
6 258 V
7 -160 V
7 -372 V
6 -412 V
7 32 V
6 273 V
7 330 V
6 -32 V
7 -273 V
6 -211 V
7 199 V
6 556 V
7 478 V
6 172 V
7 -266 V
7 -244 V
6 76 V
7 575 V
6 618 V
7 306 V
6 -134 V
7 -497 V
6 -298 V
7 135 V
6 510 V
7 381 V
6 -43 V
7 -463 V
7 -623 V
6 -173 V
stroke 2605 2526 M
7 247 V
6 433 V
7 10 V
6 -411 V
7 -661 V
6 -286 V
7 269 V
6 495 V
7 158 V
6 -441 V
7 -650 V
7 -395 V
6 334 V
7 607 V
6 397 V
7 -307 V
6 -693 V
7 -587 V
6 139 V
7 710 V
6 668 V
7 98 V
7 -546 V
6 -596 V
7 -154 V
6 614 V
7 779 V
6 465 V
7 -170 V
6 -480 V
7 -247 V
6 280 V
7 702 V
6 446 V
7 -39 V
7 -436 V
6 -335 V
7 66 V
6 384 V
7 355 V
6 -139 V
7 -462 V
6 -563 V
7 -129 V
6 234 V
7 347 V
6 -39 V
7 -492 V
7 -616 V
6 -352 V
7 199 V
6 385 V
7 251 V
6 -263 V
7 -499 V
6 -413 V
7 84 V
6 422 V
7 369 V
6 9 V
7 -390 V
7 -292 V
6 32 V
7 468 V
6 355 V
7 102 V
6 -323 V
7 -254 V
6 117 V
7 552 V
6 504 V
7 99 V
6 -303 V
7 -415 V
7 76 V
6 578 V
7 700 V
6 277 V
7 -303 V
6 -598 V
7 -462 V
6 266 V
7 637 V
6 555 V
7 -69 V
6 -647 V
7 -810 V
7 -399 V
6 306 V
7 484 V
6 212 V
7 -452 V
6 -767 V
7 -582 V
6 80 V
7 465 V
6 307 V
7 -203 V
6 -591 V
7 -359 V
7 153 V
6 612 V
7 390 V
6 -1 V
7 -450 V
6 -289 V
7 164 V
6 654 V
7 585 V
6 139 V
7 -328 V
6 -470 V
7 -49 V
7 404 V
6 683 V
7 335 V
6 -106 V
7 -441 V
6 -350 V
7 74 V
6 416 V
7 450 V
6 16 V
7 -298 V
6 -389 V
7 -173 V
7 192 V
6 260 V
7 83 V
6 -362 V
7 -427 V
6 -266 V
7 133 V
6 240 V
7 16 V
6 -366 V
7 -584 V
6 -271 V
7 121 V
7 443 V
6 186 V
7 -198 V
6 -570 V
7 -413 V
6 114 V
7 565 V
6 577 V
7 90 V
6 -324 V
7 -504 V
6 -28 V
7 466 V
7 730 V
6 362 V
7 -144 V
6 -458 V
7 -240 V
6 337 V
7 626 V
6 465 V
7 -132 V
6 -464 V
7 -421 V
6 159 V
7 534 V
7 461 V
6 10 V
7 -542 V
6 -633 V
7 -236 V
6 419 V
7 548 V
6 213 V
7 -380 V
6 -821 V
7 -589 V
6 -13 V
7 537 V
7 393 V
6 -42 V
7 -602 V
6 -693 V
7 -242 V
6 319 V
7 512 V
6 142 V
7 -232 V
6 -489 V
7 -140 V
6 276 V
7 546 V
7 254 V
6 -122 V
7 -268 V
6 -45 V
7 411 V
6 504 V
7 322 V
6 -167 V
7 -268 V
6 -153 V
7 325 V
7 529 V
6 398 V
7 -59 V
6 -455 V
7 -395 V
6 -62 V
7 425 V
6 439 V
7 124 V
6 -356 V
7 -597 V
6 -375 V
7 53 V
7 429 V
6 184 V
7 -242 V
6 -588 V
7 -492 V
6 -35 V
7 321 V
6 309 V
7 -217 V
6 -535 V
7 -508 V
6 87 V
7 515 V
7 499 V
6 -38 V
7 -557 V
6 -469 V
7 83 V
6 756 V
7 738 V
6 304 V
7 -412 V
6 -604 V
7 -216 V
6 532 V
7 877 V
7 556 V
6 -50 V
7 -633 V
6 -523 V
7 -13 V
6 625 V
7 578 V
6 160 V
stroke 4233 3897 M
7 -444 V
6 -641 V
7 -249 V
6 265 V
7 483 V
7 92 V
6 -314 V
7 -637 V
6 -329 V
7 123 V
6 384 V
7 144 V
6 -308 V
7 -577 V
6 -484 V
7 88 V
6 387 V
7 307 V
7 -128 V
6 -476 V
7 -463 V
6 -79 V
7 443 V
6 469 V
7 196 V
6 -232 V
7 -369 V
6 -74 V
7 354 V
6 579 V
7 284 V
7 -11 V
6 -295 V
7 -55 V
6 281 V
7 551 V
6 308 V
7 -126 V
6 -345 V
7 -240 V
6 253 V
7 457 V
6 369 V
7 -185 V
7 -517 V
6 -545 V
7 -60 V
6 450 V
7 505 V
6 110 V
7 -539 V
6 -736 V
7 -517 V
6 191 V
7 547 V
6 414 V
7 -189 V
7 -706 V
6 -644 V
7 -156 V
6 473 V
7 466 V
6 84 V
7 -485 V
6 -557 V
7 -148 V
6 397 V
7 619 V
6 219 V
7 -263 V
7 -481 V
6 -28 V
7 497 V
6 716 V
7 417 V
6 -156 V
7 -409 V
6 -269 V
7 345 V
6 650 V
7 595 V
6 55 V
7 -448 V
7 -540 V
6 -227 V
7 326 V
6 451 V
7 272 V
6 -286 V
7 -577 V
6 -518 V
7 -94 V
6 256 V
7 192 V
6 -79 V
7 -482 V
7 -413 V
6 -170 V
7 238 V
6 209 V
7 -25 V
6 -357 V
7 -376 V
6 13 V
7 325 V
6 379 V
7 -24 V
6 -303 V
7 -421 V
7 -17 V
6 420 V
7 555 V
6 245 V
7 -249 V
6 -432 V
7 -257 V
6 343 V
7 642 V
6 521 V
7 70 V
6 -368 V
7 -369 V
7 15 V
6 587 V
7 585 V
6 217 V
7 -273 V
6 -518 V
7 -223 V
6 256 V
7 554 V
6 182 V
7 -296 V
7 -724 V
6 -534 V
7 50 V
6 478 V
7 338 V
6 -286 V
7 -704 V
6 -776 V
7 -114 V
6 467 V
7 628 V
6 113 V
7 -470 V
7 -692 V
6 -338 V
7 397 V
6 694 V
7 509 V
6 -143 V
7 -486 V
6 -411 V
7 165 V
6 586 V
7 504 V
6 78 V
7 -384 V
7 -285 V
6 29 V
7 490 V
6 416 V
7 139 V
6 -297 V
7 -321 V
6 36 V
7 412 V
6 495 V
7 117 V
6 -273 V
7 -467 V
7 -184 V
6 232 V
7 413 V
6 283 V
7 -240 V
6 -558 V
7 -567 V
6 -124 V
7 237 V
6 276 V
7 -30 V
6 -534 V
7 -613 V
7 -315 V
6 206 V
7 353 V
6 92 V
7 -303 V
6 -492 V
7 -82 V
6 368 V
7 612 V
6 222 V
7 -159 V
6 -427 V
7 -36 V
7 529 V
6 764 V
7 429 V
6 -219 V
7 -529 V
6 -404 V
7 315 V
6 738 V
7 664 V
6 39 V
7 -575 V
6 -708 V
7 -280 V
7 484 V
6 683 V
7 415 V
6 -297 V
7 -679 V
6 -582 V
7 38 V
6 528 V
7 399 V
6 -71 V
7 -617 V
6 -577 V
7 -207 V
7 334 V
6 304 V
7 -67 V
6 -513 V
7 -605 V
6 -177 V
7 285 V
6 479 V
7 56 V
6 -343 V
7 -474 V
6 -136 V
7 393 V
7 616 V
6 452 V
7 -85 V
6 -314 V
7 -208 V
6 236 V
7 598 V
6 526 V
7 186 V
6 -285 V
7 -284 V
6 -43 V
stroke 5861 2786 M
7 349 V
7 403 V
6 102 V
7 -239 V
6 -436 V
7 -148 V
6 137 V
7 363 V
6 79 V
7 -288 V
6 -522 V
7 -318 V
6 191 V
7 401 V
7 293 V
6 -271 V
7 -566 V
6 -564 V
7 -7 V
6 455 V
7 482 V
6 49 V
7 -550 V
6 -690 V
7 -380 V
6 318 V
7 557 V
7 339 V
6 -238 V
7 -622 V
6 -389 V
7 186 V
6 687 V
7 483 V
6 94 V
7 -410 V
6 -284 V
7 189 V
6 712 V
7 634 V
7 161 V
6 -308 V
7 -470 V
6 1 V
7 496 V
6 644 V
7 224 V
6 -323 V
7 -631 V
6 -547 V
7 92 V
6 446 V
7 403 V
7 -105 V
6 -560 V
7 -699 V
6 -382 V
7 215 V
6 395 V
7 191 V
6 -272 V
7 -549 V
6 -374 V
7 38 V
7 385 V
6 207 V
7 -74 V
6 -400 V
7 -248 V
6 102 V
7 392 V
6 264 V
7 -138 V
6 -293 V
7 -227 V
6 250 V
7 466 V
7 439 V
6 -7 V
7 -319 V
6 -272 V
7 115 V
6 594 V
7 593 V
6 303 V
7 -242 V
6 -426 V
7 -220 V
6 282 V
7 604 V
7 381 V
6 -43 V
7 -553 V
6 -494 V
7 -159 V
6 357 V
7 355 V
6 -35 V
7 -551 V
6 -722 V
7 -274 V
6 233 V
7 453 V
7 17 V
6 -471 V
7 -712 V
6 -315 V
7 353 V
6 628 V
7 407 V
6 -289 V
7 -638 V
6 -461 V
7 286 V
6 754 V
7 643 V
7 116 V
6 -536 V
7 -564 V
6 -94 V
% End plot #1
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
990 4859 N
990 576 L
5885 0 V
0 4283 V
-5885 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
