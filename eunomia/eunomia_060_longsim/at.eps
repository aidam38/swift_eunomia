%!PS-Adobe-2.0 EPSF-2.0
%%Title: at.eps
%%Creator: gnuplot 5.2 patchlevel 5
%%CreationDate: Wed Dec 12 14:15:10 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -60 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
%
% Base ISO8859-1 character encoding plus support macros for UTF-8 encoding
% via the glyphshow operator
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def

/Gshow { dup type /stringtype eq { show } { glyphshow } ifelse } def

/Gsall { {Gshow} forall } def
/Gwidth {
	dup currentpoint pop exch
	gsave 6 array currentmatrix nulldevice setmatrix Gsall currentpoint pop grestore sub
	} def
/GLshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GRshow {currentpoint stroke M dup Gwidth vshift R
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/GCshow {currentpoint stroke M dup Gwidth 2 div vshift R 
	Blacktext {gsave 0 setgray Gsall grestore} {Gsall} ifelse} def
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (at.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 5)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Dec 12 14:15:10 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 180 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1098 576 M
63 0 V
5714 0 R
-63 0 V
stroke
990 576 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.712)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
/vshift -60 def
1.000 UL
LTb
LCb setrgbcolor
1098 1188 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1188 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.713)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 1800 M
63 0 V
5714 0 R
-63 0 V
stroke
990 1800 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.714)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 2412 M
63 0 V
5714 0 R
-63 0 V
stroke
990 2412 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.715)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 3023 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3023 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.716)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 3635 M
63 0 V
5714 0 R
-63 0 V
stroke
990 3635 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.717)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 4247 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4247 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.718)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 4859 M
63 0 V
5714 0 R
-63 0 V
stroke
990 4859 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 2.719)]
] -60.0 MRshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1098 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1098 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1740 576 M
0 63 V
0 4220 R
0 -63 V
stroke
1740 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.1)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2382 576 M
0 63 V
0 4220 R
0 -63 V
stroke
2382 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.2)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3024 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3024 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.3)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3666 576 M
0 63 V
0 4220 R
0 -63 V
stroke
3666 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.4)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4307 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4307 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.5)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4949 576 M
0 63 V
0 4220 R
0 -63 V
stroke
4949 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.6)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5591 576 M
0 63 V
0 4220 R
0 -63 V
stroke
5591 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.7)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6233 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6233 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.8)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6875 576 M
0 63 V
0 4220 R
0 -63 V
stroke
6875 396 M
[ [(Helvetica) 180.0 0.0 true true 0 ( 0.9)]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1098 4859 N
0 -4283 V
5777 0 V
0 4283 V
-5777 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
162 2717 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 180.0 0.0 true true 0 (a [AU])]
] -60.0 MCshow
grestore
/Helvetica findfont 180 scalefont setfont
LTb
LCb setrgbcolor
3986 126 M
[ [(Helvetica) 180.0 0.0 true true 0 (t [Myr])]
] -60.0 MCshow
/Helvetica findfont 180 scalefont setfont
LTb
% Begin plot #1
1.000 UL
LTb
0.08 0.08 0.08 C LCb setrgbcolor
6056 4706 M
("<awk '$1==1{print $2, $3}' bin.out") Rshow
1.000 UL
LTb
0.08 0.08 0.08 C 6164 4706 M
495 0 V
1098 2421 M
6 489 V
7 5 V
6 132 V
7 -445 V
6 434 V
7 -1157 V
6 1998 V
6 -1173 V
7 -110 V
6 -1247 V
7 2449 V
6 -1617 V
6 157 V
7 -685 V
6 1313 V
7 -1558 V
6 638 V
7 -551 V
6 402 V
6 -853 V
7 547 V
6 -26 V
7 -391 V
6 -117 V
6 822 V
7 -195 V
6 -535 V
7 644 V
6 -95 V
7 24 V
6 263 V
6 68 V
7 -730 V
6 1110 V
7 -209 V
6 1269 V
6 -1544 V
7 1083 V
6 -665 V
7 2124 V
6 -1918 V
7 756 V
6 -1393 V
6 1839 V
7 -1274 V
6 309 V
7 -868 V
6 770 V
7 -814 V
6 295 V
6 -680 V
7 -33 V
6 115 V
7 -361 V
6 130 V
6 -88 V
7 -170 V
6 55 V
7 1038 V
6 -1319 V
7 455 V
6 741 V
6 -24 V
7 -981 V
6 1122 V
7 -589 V
6 226 V
6 -39 V
7 1071 V
6 -1756 V
7 1119 V
6 122 V
7 1574 V
6 -2400 V
6 1387 V
7 -311 V
6 1294 V
7 -1602 V
6 758 V
7 -380 V
6 600 V
6 -645 V
7 171 V
6 -344 V
7 -451 V
6 715 V
6 -392 V
7 -522 V
6 -534 V
7 1483 V
6 -1291 V
7 259 V
6 37 V
6 352 V
7 -873 V
6 1185 V
7 -1024 V
6 489 V
6 -271 V
7 437 V
6 -1147 V
7 1336 V
6 -887 V
7 159 V
6 -301 V
6 1667 V
7 -1781 V
6 859 V
7 217 V
6 822 V
6 -1087 V
7 748 V
6 133 V
7 452 V
6 -408 V
7 -14 V
6 355 V
6 -275 V
7 486 V
6 -542 V
7 89 V
6 -1127 V
7 2206 V
6 -1471 V
6 -499 V
7 -894 V
6 2171 V
7 -1536 V
6 17 V
6 -293 V
7 888 V
6 -1273 V
7 1062 V
6 -592 V
7 68 V
6 -674 V
6 1140 V
7 -972 V
6 451 V
7 -534 V
6 748 V
6 -269 V
7 193 V
6 -169 V
7 466 V
6 31 V
7 115 V
6 188 V
6 -473 V
7 772 V
6 -116 V
7 18 V
6 -677 V
7 1322 V
6 -825 V
6 1215 V
7 -1193 V
6 566 V
7 -1018 V
6 2522 V
6 -2217 V
7 571 V
6 -1509 V
7 2326 V
6 -1291 V
7 -67 V
6 -752 V
6 1719 V
7 -1737 V
6 678 V
7 -587 V
6 426 V
6 -932 V
7 677 V
6 -467 V
7 -41 V
6 -360 V
7 560 V
6 180 V
6 -686 V
7 199 V
6 746 V
7 -186 V
6 -470 V
6 824 V
7 -550 V
6 282 V
7 465 V
6 -52 V
7 -810 V
6 1351 V
6 -572 V
7 1691 V
6 -1604 V
7 772 V
6 -853 V
7 2230 V
6 -1835 V
6 610 V
7 -1368 V
6 2043 V
7 -1534 V
6 402 V
6 -1003 V
7 1149 V
6 -1089 V
7 271 V
6 -746 V
7 556 V
6 -440 V
6 -114 V
7 -60 V
6 259 V
7 -551 V
6 545 V
6 429 V
7 -993 V
6 192 V
7 1247 V
6 -559 V
7 -809 V
6 585 V
6 206 V
7 -72 V
6 -325 V
7 532 V
6 -866 V
7 864 V
6 -15 V
6 867 V
7 -1581 V
6 1422 V
7 -506 V
6 1661 V
6 -1828 V
7 1016 V
6 -618 V
7 1975 V
6 -2116 V
7 872 V
6 -750 V
6 1561 V
7 -1638 V
6 705 V
7 -1297 V
6 1151 V
6 -686 V
stroke 2683 2156 M
7 188 V
6 -1074 V
7 786 V
6 -349 V
7 -33 V
6 134 V
6 38 V
7 -886 V
6 612 V
7 732 V
6 -1442 V
6 89 V
7 730 V
6 -237 V
7 -711 V
6 835 V
7 -480 V
6 386 V
6 -159 V
7 735 V
6 -637 V
7 717 V
6 -311 V
7 1145 V
6 -1154 V
6 646 V
7 141 V
6 1122 V
7 -2175 V
6 1526 V
6 -405 V
7 1748 V
6 -2412 V
7 930 V
6 -452 V
7 1793 V
6 -1943 V
6 658 V
7 -1493 V
6 1297 V
7 -288 V
6 -218 V
6 -753 V
7 805 V
6 -442 V
7 4 V
6 -144 V
7 154 V
6 -683 V
6 464 V
7 -157 V
6 -191 V
7 -302 V
6 470 V
7 155 V
6 -634 V
6 92 V
7 666 V
6 179 V
7 -1014 V
6 898 V
6 -17 V
7 -22 V
6 -477 V
7 1255 V
6 -1459 V
7 697 V
6 298 V
6 438 V
7 -1439 V
6 1585 V
7 -652 V
6 1815 V
6 -1855 V
7 1053 V
6 -870 V
7 2149 V
6 -1792 V
7 666 V
6 -1127 V
6 2074 V
7 -1736 V
6 576 V
7 -1040 V
6 1505 V
6 -1368 V
7 424 V
6 -1167 V
7 1000 V
6 -518 V
7 -282 V
6 -449 V
6 742 V
7 -782 V
6 309 V
7 428 V
6 -639 V
7 -350 V
6 1283 V
6 -359 V
7 -819 V
6 125 V
7 1000 V
6 -702 V
6 -160 V
7 347 V
6 -183 V
7 365 V
6 56 V
7 348 V
6 -549 V
6 930 V
7 -472 V
6 997 V
7 -1026 V
6 893 V
6 -493 V
7 1038 V
6 -1353 V
7 1062 V
6 -761 V
7 1646 V
6 -1607 V
6 474 V
7 -1028 V
6 2605 V
7 -2297 V
6 743 V
7 -1899 V
6 2307 V
6 -882 V
7 -233 V
6 -1058 V
7 2094 V
6 -1533 V
6 331 V
7 -128 V
6 662 V
7 -1310 V
6 803 V
7 -416 V
6 269 V
6 -820 V
7 720 V
6 -737 V
7 634 V
6 -819 V
6 967 V
7 -684 V
6 368 V
7 -420 V
6 1063 V
7 -765 V
6 576 V
6 -352 V
7 168 V
6 89 V
7 1059 V
6 -1475 V
6 166 V
7 1218 V
6 50 V
7 -848 V
6 478 V
7 292 V
6 65 V
6 225 V
7 -252 V
6 59 V
7 -596 V
6 1362 V
7 -866 V
6 -178 V
6 -599 V
7 1349 V
6 -993 V
7 34 V
6 -1053 V
6 1534 V
7 -1016 V
6 -174 V
7 -676 V
6 1648 V
7 -1576 V
6 331 V
6 -8 V
7 660 V
6 -1117 V
7 1021 V
6 -439 V
6 197 V
7 -523 V
6 1347 V
7 -1606 V
6 887 V
7 -179 V
6 162 V
6 -955 V
7 1751 V
6 -1615 V
7 625 V
6 -178 V
7 1614 V
6 -1997 V
6 927 V
7 -16 V
6 1453 V
7 -1906 V
6 961 V
6 -137 V
7 1488 V
6 -2206 V
7 1203 V
6 -265 V
7 1612 V
6 -2344 V
6 1069 V
7 -400 V
6 1464 V
7 -1621 V
6 500 V
6 -1062 V
7 1057 V
6 -474 V
7 143 V
6 -1075 V
7 825 V
6 -27 V
6 -320 V
7 -264 V
6 635 V
7 -1075 V
6 597 V
6 -160 V
7 -211 V
6 -586 V
7 668 V
6 -322 V
7 -240 V
6 -201 V
6 440 V
7 288 V
6 -721 V
7 229 V
6 666 V
7 82 V
6 -805 V
6 840 V
7 81 V
stroke 4282 1928 M
6 -186 V
7 57 V
6 315 V
6 -607 V
7 459 V
6 701 V
7 -844 V
6 -270 V
7 1217 V
6 -316 V
6 535 V
7 -605 V
6 461 V
7 -536 V
6 1441 V
6 -1052 V
7 275 V
6 -883 V
7 1741 V
6 -1200 V
7 222 V
6 -843 V
6 1759 V
7 -1359 V
6 60 V
7 -1079 V
6 2292 V
6 -1601 V
7 -226 V
6 -854 V
7 2327 V
6 -1888 V
7 352 V
6 -449 V
6 1406 V
7 -1545 V
6 801 V
7 -142 V
6 163 V
7 -708 V
6 1133 V
6 -1370 V
7 673 V
6 -70 V
7 57 V
6 -1039 V
6 1323 V
7 -844 V
6 400 V
7 -540 V
6 1402 V
7 -1434 V
6 985 V
6 -431 V
7 1321 V
6 -1414 V
7 779 V
6 -132 V
6 1435 V
7 -2022 V
6 951 V
7 214 V
6 1326 V
7 -2491 V
6 1576 V
6 -636 V
7 2138 V
6 -2249 V
7 574 V
6 -676 V
7 1868 V
6 -1680 V
6 625 V
7 -1489 V
6 1679 V
7 -839 V
6 -5 V
6 -746 V
7 1120 V
6 -951 V
7 239 V
6 -673 V
7 1000 V
6 -1008 V
6 306 V
7 -644 V
6 1030 V
7 -1181 V
6 675 V
6 -184 V
7 276 V
6 -891 V
7 1167 V
6 -112 V
7 -281 V
6 -350 V
6 1293 V
7 -1124 V
6 462 V
7 -45 V
6 76 V
6 -679 V
7 1346 V
6 -1358 V
7 500 V
6 -240 V
7 1641 V
6 -2083 V
6 816 V
7 187 V
6 1434 V
7 -1977 V
6 873 V
7 6 V
6 1301 V
6 -1645 V
7 709 V
6 -33 V
7 1204 V
6 -1917 V
6 1052 V
7 -250 V
6 1190 V
7 -1711 V
6 696 V
7 -366 V
6 892 V
6 -1072 V
7 593 V
6 -1299 V
7 732 V
6 83 V
6 -317 V
7 -652 V
6 917 V
7 -626 V
6 52 V
7 -185 V
6 512 V
6 -1093 V
7 759 V
6 -418 V
7 10 V
6 -548 V
7 652 V
6 -348 V
6 -59 V
7 -355 V
6 633 V
7 168 V
6 -554 V
6 -68 V
7 1110 V
6 -442 V
7 -307 V
6 206 V
7 710 V
6 -720 V
6 629 V
7 -531 V
6 147 V
7 -124 V
6 1609 V
6 -2168 V
7 532 V
6 696 V
7 1046 V
6 -1817 V
7 674 V
6 218 V
6 1107 V
7 -1573 V
6 811 V
7 -167 V
6 912 V
6 -1329 V
7 817 V
6 -339 V
7 950 V
6 -1370 V
7 716 V
6 -415 V
6 653 V
7 -927 V
6 553 V
7 -873 V
6 640 V
7 -514 V
6 522 V
6 -1255 V
7 784 V
6 73 V
7 -282 V
6 -606 V
6 1262 V
7 -1216 V
6 438 V
7 111 V
6 -10 V
7 -919 V
6 904 V
6 -147 V
7 -461 V
6 -305 V
7 659 V
6 -489 V
6 196 V
7 -489 V
6 707 V
7 -412 V
6 287 V
7 -588 V
6 1268 V
6 -800 V
7 485 V
6 -314 V
7 701 V
6 -748 V
7 1322 V
6 -1040 V
6 140 V
7 53 V
6 1546 V
7 -2236 V
6 753 V
6 694 V
7 917 V
6 -2309 V
7 1480 V
6 -204 V
7 1548 V
6 -2267 V
6 1191 V
7 -457 V
6 1482 V
7 -1782 V
6 769 V
6 -586 V
7 1395 V
6 -1664 V
7 745 V
6 -804 V
7 1395 V
6 -1394 V
6 614 V
7 -1326 V
6 1842 V
7 -1181 V
6 314 V
stroke 5880 2402 M
6 -1425 V
7 1618 V
6 -436 V
7 -283 V
6 -789 V
7 1722 V
6 -1279 V
6 396 V
7 -208 V
6 786 V
7 -1256 V
6 1082 V
7 -748 V
6 538 V
6 -1030 V
7 1295 V
6 -1369 V
7 971 V
6 -855 V
6 628 V
7 -855 V
6 1170 V
7 -926 V
6 506 V
7 -621 V
6 879 V
6 -410 V
7 415 V
6 -879 V
7 1270 V
6 -730 V
6 330 V
7 -471 V
6 1499 V
7 -1794 V
6 873 V
7 197 V
6 587 V
6 -1562 V
7 1527 V
6 -650 V
7 1264 V
6 -1402 V
7 1013 V
6 -742 V
6 1711 V
7 -1398 V
6 508 V
7 -929 V
6 1919 V
6 -1387 V
7 344 V
6 -837 V
7 1490 V
6 -1100 V
7 272 V
6 -818 V
6 1407 V
7 -986 V
6 -152 V
7 -758 V
6 1684 V
6 -1021 V
7 -554 V
6 -449 V
7 1578 V
6 -1108 V
7 -55 V
6 -169 V
6 802 V
7 -690 V
6 136 V
7 400 V
6 -698 V
6 314 V
7 351 V
6 -511 V
7 -540 V
6 856 V
7 -122 V
6 -677 V
6 -56 V
7 599 V
6 -147 V
7 -361 V
6 -67 V
7 644 V
6 -278 V
6 -113 V
7 -234 V
6 1137 V
7 -828 V
6 367 V
6 -310 V
7 560 V
6 -474 V
7 1359 V
6 -1696 V
7 479 V
6 310 V
6 1425 V
7 -2246 V
6 692 V
7 598 V
6 1290 V
6 -2390 V
7 1320 V
6 -170 V
7 1604 V
6 -2181 V
7 1185 V
6 -569 V
6 1779 V
7 -1984 V
6 831 V
7 -589 V
6 1832 V
7 -2121 V
6 928 V
6 -840 V
% End plot #1
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1098 4859 N
0 -4283 V
5777 0 V
0 4283 V
-5777 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
